generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  uuid        String        @unique
  email       String        @unique
  createdAt   DateTime      @default(now())
  updatedAt   DateTime?
  Appointment Appointment[]
}

model District {
  id           Int       @id @default(autoincrement())
  districtName String    @unique
  stateId      Int
  State        State     @relation(fields: [stateId], references: [id])
  Partner      Partner[]
}

model Office {
  id                Int             @id @default(autoincrement())
  officeName        String          @unique
  officeDescription String?
  OfficeService     OfficeService[]
  Partner           Partner[]
}

model Template {
  id           Int    @id @default(autoincrement())
  templateName String @unique
}

model Partner {
  id                  Int                   @id @default(autoincrement())
  partnerName         String?
  partnerDescription  String?
  officeId            Int
  districtId          Int
  District            District              @relation(fields: [districtId], references: [id])
  Office              Office                @relation(fields: [officeId], references: [id])
  Appointment         Appointment[]
  AppointmentSettings AppointmentSettings[]
  AppointmentSlots    AppointmentSlots[]
  Opening             Opening[]
}

model State {
  id        Int        @id @default(autoincrement())
  stateName String     @unique
  District  District[]
}

model AppointmentSettings {
  id         Int     @id @default(autoincrement())
  partnerId  Int
  intervall  Int     @default(30)
  holydaysOn Boolean @default(true)
  Partner    Partner @relation(fields: [partnerId], references: [id])
}

model AppointmentSlots {
  id          Int      @id @default(autoincrement())
  isBlackList Boolean  @default(true)
  dateFrom    DateTime @db.Timestamptz(6)
  dateTo      DateTime @db.Timestamptz(6)
  partnerId   Int
  Partner     Partner  @relation(fields: [partnerId], references: [id])
}

model Opening {
  id           Int      @id @default(autoincrement())
  weekday      Weekday
  timeslotFrom DateTime @db.Timetz(6)
  timeslotTo   DateTime @db.Timetz(6)
  partnerId    Int
  Partner      Partner  @relation(fields: [partnerId], references: [id])
}

model Appointment {
  id            Int      @id @default(autoincrement())
  userId        String
  partnerId     Int
  typeOfRequest String?
  note          String?
  attachment    String?
  timestamp     Decimal? @db.Decimal
  Partner       Partner  @relation(fields: [partnerId], references: [id])
  User          User     @relation(fields: [userId], references: [uuid])
}

model OfficeService {
  id                 Int     @id @default(autoincrement())
  serviceText        String
  serviceDescription String?
  officeId           Int
  Office             Office  @relation(fields: [officeId], references: [id])
}

enum Weekday {
  Montag
  Dienstag
  Mittwoch
  Donnertag
  Freitag
  Samstag
  Sonntag
}
